# Generated by Django 5.2.4 on 2025-08-13 08:54

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('password', models.CharField(max_length=255)),
                ('role', models.CharField(choices=[('student', 'Student'), ('company', 'Company'), ('admin', 'Admin')], max_length=20)),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive')], default='active', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('reset_token', models.CharField(blank=True, max_length=255, null=True)),
                ('token_expiry', models.DateTimeField(blank=True, null=True)),
                ('failed_attempts', models.PositiveSmallIntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'login',
            },
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(max_length=150)),
                ('contact_person', models.CharField(max_length=150)),
                ('contact_national_id', models.CharField(max_length=50)),
                ('contact_national_id_picture', models.BinaryField()),
                ('contact_number', models.CharField(max_length=20)),
                ('company_email', models.EmailField(max_length=254)),
                ('website', models.URLField()),
                ('industry', models.CharField(max_length=150)),
                ('location', models.CharField(max_length=150)),
                ('description', models.TextField(blank=True, null=True)),
                ('user', models.OneToOneField(db_column='login_id', on_delete=django.db.models.deletion.RESTRICT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'company',
            },
        ),
        migrations.CreateModel(
            name='CompanyDoc',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_type', models.CharField(max_length=50)),
                ('file_url', models.CharField(max_length=255)),
                ('verification_status', models.CharField(default='pending', max_length=20)),
                ('rejection_reason', models.TextField(blank=True, null=True)),
                ('company', models.ForeignKey(db_column='company_id', on_delete=django.db.models.deletion.CASCADE, to='core.company')),
            ],
            options={
                'db_table': 'company_docs',
            },
        ),
        migrations.CreateModel(
            name='Job',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150)),
                ('description', models.TextField()),
                ('field', models.CharField(max_length=100)),
                ('location', models.CharField(max_length=150)),
                ('deadline', models.DateField()),
                ('status', models.CharField(default='open', max_length=20)),
                ('openings_available', models.PositiveSmallIntegerField()),
                ('type', models.CharField(max_length=50)),
                ('duration', models.CharField(max_length=50)),
                ('company', models.ForeignKey(db_column='company_id', on_delete=django.db.models.deletion.CASCADE, to='core.company')),
            ],
            options={
                'db_table': 'attachment',
            },
        ),
        migrations.CreateModel(
            name='Application',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(default='draft', max_length=20)),
                ('applied_at', models.DateTimeField(blank=True, null=True)),
                ('reviewed_at', models.DateTimeField(blank=True, null=True)),
                ('reviewed_by', models.CharField(blank=True, max_length=150, null=True)),
                ('application_stage', models.CharField(blank=True, max_length=50, null=True)),
                ('comments', models.TextField(blank=True, null=True)),
                ('job', models.ForeignKey(db_column='attachment_id', on_delete=django.db.models.deletion.RESTRICT, to='core.job')),
            ],
            options={
                'db_table': 'application',
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150)),
                ('description', models.TextField()),
                ('planned_start_date', models.DateField()),
                ('planned_end_date', models.DateField()),
                ('actual_start_date', models.DateField(blank=True, null=True)),
                ('actual_end_date', models.DateField(blank=True, null=True)),
                ('status', models.CharField(default='active', max_length=20)),
                ('comments', models.TextField(blank=True, null=True)),
                ('application', models.ForeignKey(db_column='application_id', on_delete=django.db.models.deletion.RESTRICT, to='core.application')),
            ],
            options={
                'db_table': 'projects',
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=100)),
                ('telephone', models.CharField(max_length=20)),
                ('major', models.CharField(max_length=100)),
                ('university', models.CharField(max_length=100)),
                ('date_of_birth', models.DateField()),
                ('year_of_study', models.PositiveSmallIntegerField()),
                ('student_id_number', models.CharField(max_length=50)),
                ('national_id', models.CharField(max_length=50)),
                ('student_id_picture', models.BinaryField()),
                ('national_id_picture', models.BinaryField()),
                ('profile_picture', models.BinaryField(blank=True, null=True)),
                ('comments', models.TextField(blank=True, null=True)),
                ('user', models.OneToOneField(db_column='login_id', on_delete=django.db.models.deletion.RESTRICT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'student',
            },
        ),
        migrations.AddField(
            model_name='application',
            name='student',
            field=models.ForeignKey(db_column='student_id', on_delete=django.db.models.deletion.CASCADE, to='core.student'),
        ),
        migrations.CreateModel(
            name='StudentDoc',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_type', models.CharField(max_length=20)),
                ('file_name', models.CharField(max_length=255)),
                ('file_url', models.CharField(max_length=255)),
                ('application', models.ForeignKey(db_column='application_id', on_delete=django.db.models.deletion.CASCADE, to='core.application')),
                ('student', models.ForeignKey(db_column='student_id', on_delete=django.db.models.deletion.CASCADE, to='core.student')),
            ],
            options={
                'db_table': 'student_docs',
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150)),
                ('description', models.TextField()),
                ('assigned_by', models.CharField(max_length=150)),
                ('status', models.CharField(default='pending', max_length=20)),
                ('due_date', models.DateField()),
                ('project', models.ForeignKey(db_column='project_id', on_delete=django.db.models.deletion.CASCADE, to='core.project')),
            ],
            options={
                'db_table': 'task',
            },
        ),
        migrations.CreateModel(
            name='TaskUpdate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('progress_percent', models.PositiveSmallIntegerField()),
                ('comments', models.TextField(blank=True, null=True)),
                ('student', models.ForeignKey(db_column='student_id', on_delete=django.db.models.deletion.CASCADE, to='core.student')),
                ('task', models.ForeignKey(db_column='task_id', on_delete=django.db.models.deletion.CASCADE, to='core.task')),
            ],
            options={
                'db_table': 'task_update',
            },
        ),
    ]
